<?php

// declare(strict_types=1);

/**
 * @file
 * Primary module hooks for Yummy red module.
 */

use Drupal\Core\Template\Attribute;
use Drupal\file\Entity\File;

/**
 * Prepares variables for views-style-yummy-red-our-menu.html.twig template.
 */
function template_preprocess_views_style_yummy_red_our_menu(array &$variables): void {
  $view = $variables['view'];
  $options = $view->style_plugin->options;
  $i = 0;

  $variables['default_row_class'] = $options['default_row_class'];

  foreach ($variables['rows'] as $id => $row) {
    $variables['rows'][$id] = [
      'content' => $row,
      'attributes' => new Attribute(),
    ];
    $i++;
    $field_items = $row['#row']->_entity->get('field_image_menu'); 
    $Categories = $row['#row']->_entity->get('field_categories');
    $Body = $row['#row']->_entity->get('body')->getValue()[0]['value'];
    $Price_menu = $row['#row']->_entity->get('field_price_menu')->getValue()[0]['value'];
  //  dump($Categories);
  foreach ($field_items as $item) {
     $file_id = $item->target_id;
   }

   if (isset($Categories) && is_iterable($Categories)) {
    $tid = NULL; // Default value for $tid.
  
    foreach ($Categories as $item) {
      $tid = $item->target_id;
    }
  
    if ($tid !== NULL) {
      $term_name = \Drupal\taxonomy\Entity\Term::load((int)$tid)->get('name')->value;
     
    } else {
      \Drupal::logger('yummy_red')->warning('No valid taxonomy term ID found in $type.');
    }
  } else {
    \Drupal::logger('yummy_red')->warning('$type is not set or is not iterable.');
  }
  

   $file = File::load($file_id);
   if ($file) {
     $uri = $file->getFileUri();
     $url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri); 
      
     $variables['rows'][$id]['title'] = $row['#row']->_entity->getTitle();
     $variables['rows'][$id]['url'] = $url;
     $variables['rows'][$id]['id'] = 'item item-' . $i;
     $variables['rows'][$id]['term_name'] = $term_name;
     $variables['rows'][$id]['Body'] = $Body;
     $variables['rows'][$id]['Price_menu'] = $Price_menu;

     if ($row_class = $view->style_plugin->getRowClass($id)) {
       $variables['rows'][$id]['attributes']->addClass($row_class);
     }
   }
 }
}


/**
 * Prepares variables for views-style-yummy-red-testimonials.html.twig template.
 */
function template_preprocess_views_style_yummy_red_testimonials(array &$variables): void {
  $view = $variables['view'];
  $options = $view->style_plugin->options;

  // Fetch wrapper classes from handler options.
  if ($options['wrapper_class']) {
    $variables['attributes']['class'] = explode(' ', $options['wrapper_class']);
  }

  $variables['default_row_class'] = $options['default_row_class'];
  foreach ($variables['rows'] as $id => $row) {
    $variables['rows'][$id] = [
      'content' => $row,
      'attributes' => new Attribute(),
    ];
    if ($row_class = $view->style_plugin->getRowClass($id)) {
      $variables['rows'][$id]['attributes']->addClass($row_class);
    }
  }
}



/**
 * Prepares variables for views-style-yummy-red-events.html.twig template.
 */
function template_preprocess_views_style_yummy_red_events(array &$variables): void {
  $view = $variables['view'];
  $options = $view->style_plugin->options;
  $i = 0;

  $variables['default_row_class'] = $options['default_row_class'];

  foreach ($variables['rows'] as $id => $row) {
    $variables['rows'][$id] = [
      'content' => $row,
      'attributes' => new Attribute(),
    ];
    $i++;
    $field_items = $row['#row']->_entity->get('field_image_events'); 
    $Body = $row['#row']->_entity->get('body')->getValue()[0]['value'];
    $Price_events = $row['#row']->_entity->get('field_price_events')->getValue()[0]['value'];
  
  foreach ($field_items as $item) {
     $file_id = $item->target_id;
   }
   $file = File::load($file_id);
   if ($file) {
     $uri = $file->getFileUri();
     $url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri); 
      
     $variables['rows'][$id]['title'] = $row['#row']->_entity->getTitle();
     $variables['rows'][$id]['url'] = $url;
     $variables['rows'][$id]['id'] = 'item item-' . $i;
     $variables['rows'][$id]['Body'] = $Body;
     $variables['rows'][$id]['Price_events'] = $Price_events;

     if ($row_class = $view->style_plugin->getRowClass($id)) {
       $variables['rows'][$id]['attributes']->addClass($row_class);
     }
   }
 }
}


/**
 * Prepares variables for views-style-yummy-red-gallery.html.twig template.
 */
function template_preprocess_views_style_yummy_red_gallery(array &$variables): void {
  $view = $variables['view'];
  $options = $view->style_plugin->options;
  $i = 0;
  // Fetch wrapper classes from handler options.
  if ($options['wrapper_class']) {
    $variables['attributes']['class'] = explode(' ', $options['wrapper_class']);
  }

  $variables['default_row_class'] = $options['default_row_class'];
  foreach ($variables['rows'] as $id => $row) {
    $variables['rows'][$id] = [
      'content' => $row,
      'attributes' => new Attribute(),
    ];
    $i++;
    $field_items = $row['#row']->_entity->get('field_image_gallery'); 
    
    foreach ($field_items as $item) {
      $file_id = $item->target_id;
    }
    $file = File::load($file_id);
    if ($file) {
      $uri = $file->getFileUri();
      $url = \Drupal::service('file_url_generator')->generateAbsoluteString($uri); 
    
      $variables['rows'][$id]['title'] = $row['#row']->_entity->getTitle();
      $variables['rows'][$id]['url'] = $url;
      $variables['rows'][$id]['id'] = 'item item-' . $i;

     if ($row_class = $view->style_plugin->getRowClass($id)) {
      $variables['rows'][$id]['attributes']->addClass($row_class);
      }
    }
  }

}
